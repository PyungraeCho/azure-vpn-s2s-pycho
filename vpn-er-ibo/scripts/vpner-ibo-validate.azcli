#Azure Variables
rg=lab-er-s2svpn-inet #Define your resource group
location=centralus #Set Region
mypip=$(curl -4 ifconfig.io -s) #Captures your local Public IP and adds it to NSG to restrict access to SSH only for your Public IP.
sharedkey=$(openssl rand -base64 24) #VPN Gateways S2S shared key is automatically generated.
username=azureuser
password=Msft123Msft123

#Define parameters for Azure Hub and Spokes:
AzurehubName=Az-Hub #Azure Hub Name
AzurehubaddressSpacePrefix=10.0.20.0/24 #Azure Hub VNET address space
AzurehubNamesubnetName=subnet1 #Azure Hub Subnet name where VM will be provisioned
Azurehubsubnet1Prefix=10.0.20.0/27 #Azure Hub Subnet address prefix
AzurehubgatewaySubnetPrefix=10.0.20.32/27 #Azure Hub Gateway Subnet address prefix
AzureFirewallPrefix=10.0.20.64/26 #Azure Firewall Prefix
AzurehubrssubnetPrefix=10.0.20.128/27 #Azure Hub Route Server subnet address prefix
AzureHubDnsInSubnetPrefix=10.0.20.160/28
AzureHubDnsOutSubnetPrefix=10.0.20.176/28
AzureHubBastionSubnet=10.0.20.192/26
Azurespoke1Name=Az-Spk1 #Azure Spoke 1 name
Azurespoke1AddressSpacePrefix=10.0.21.0/24 # Azure Spoke 1 VNET address space
Azurespoke1Subnet1Prefix=10.0.21.0/27 # Azure Spoke 1 Subnet1 address prefix
Azurespoke2Name=Az-Spk2 #Azure Spoke 1 name
Azurespoke2AddressSpacePrefix=10.0.22.0/24 # Azure Spoke 1 VNET address space
Azurespoke2Subnet1Prefix=10.0.22.0/27 # Azure Spoke 1 VNET address space

### VPN-VNET for Internet breakout
AzurevpngwName=az-vpn #Azure Spoke 1 name
AzurevpngwAddressSpacePrefix=10.0.23.0/24 
Azurevpngw2Subnet1Prefix=10.0.23.0/27 
AzurehubgatewaySubnetPrefix=10.0.23.32/27
vnetname=$AzurevpngwName-vnet 
subnetname=subnet1
nvaname=$AzurevpngwName-nva-lx

# Check ER/VPN GW learned / advertised routes
# Azure ER
az network vnet-gateway list-bgp-peer-status -g $rg -n $AzurevpngwName-ergw -o table
ips=$(az network vnet-gateway list-bgp-peer-status -g $rg -n $AzurevpngwName-ergw --query 'value[].{ip:neighbor}' -o tsv)
array=($ips)
for ip in "${array[@]}"
  do
  echo Advertised routes to peer $ip
  az network vnet-gateway list-advertised-routes -g $rg -n $AzurevpngwName-ergw -o table --peer $(az network vnet-gateway list-bgp-peer-status -g $rg -n $AzurevpngwName-ergw --query 'value[1].{ip:neighbor}' -o tsv)
  done
az network vnet-gateway list-learned-routes -g $rg -n $AzurevpngwName-ergw -o table

# Troubleshooting
# Disable UDRs ## Disable Route Tables (bypass Firewall) - It restores default behavior of the original LAB without the Firewall.
az network vnet subnet update -n subnet1 -g $rg --vnet-name $AzurevpngwName-vnet --route-table "" -o none
az network vnet subnet update -n subnet1 -g $rg --vnet-name $Azurespoke1Name-vnet --route-table "" -o none
az network vnet subnet update -n subnet1 -g $rg --vnet-name $Azurespoke2Name-vnet --route-table "" -o none
az network vnet subnet update -n GatewaySubnet -g $rg --vnet-name $AzurevpngwName-vnet --route-table "" -o none

az network vnet subnet update -n subnet1 -g $rg --vnet-name $AzurevpngwName-vnet --route-table RT-Hub-to-AzFW -o none
az network vnet subnet update -n subnet1 -g $rg --vnet-name $Azurespoke1Name-vnet --route-table RT-Spoke1-to-NVA -o none
az network vnet subnet update -n subnet1 -g $rg --vnet-name $Azurespoke2Name-vnet --route-table RT-Spoke2-to-AzFW -o none
az network vnet subnet update -n GatewaySubnet -g $rg --vnet-name $AzurevpngwName-vnet --route-table RT-GWSubnet-to-AzFW -o none
